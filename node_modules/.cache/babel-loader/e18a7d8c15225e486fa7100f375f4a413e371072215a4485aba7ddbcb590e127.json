{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\heman\\\\graphql\\\\client\\\\src\\\\components\\\\Client.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { gql, useQuery } from '@apollo/client';\nimport ClientRow from './ClientRow';\nimport { GET_CLIENTS } from './queries/clientQueries';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Client({\n  id\n}) {\n  _s();\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_CLIENTS, {\n    variables: {\n      id\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Clients\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Error: \", error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 17\n    }, this), data && data.clients && data.clients.length > 0 ? /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table table-hover mt-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Phone\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Action\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: data.clients.map(client => /*#__PURE__*/_jsxDEV(ClientRow, {\n          client: client\n        }, client.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No clients available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n}\n_s(Client, \"OQZiY3KqWoytFPIJWw/H9Hrmbok=\", false, function () {\n  return [useQuery];\n});\n_c = Client;\nvar _c;\n$RefreshReg$(_c, \"Client\");","map":{"version":3,"names":["React","gql","useQuery","ClientRow","GET_CLIENTS","jsxDEV","_jsxDEV","Client","id","_s","loading","error","data","variables","children","fileName","_jsxFileName","lineNumber","columnNumber","message","clients","length","className","map","client","_c","$RefreshReg$"],"sources":["C:/Users/heman/graphql/client/src/components/Client.jsx"],"sourcesContent":["import React from 'react'\r\nimport { gql, useQuery } from '@apollo/client'\r\nimport ClientRow from './ClientRow'\r\nimport { GET_CLIENTS } from './queries/clientQueries'\r\n\r\nexport default function Client({ id }) {\r\n\r\n  const { loading, error, data } = useQuery(GET_CLIENTS, {\r\n    variables: { id },\r\n  })\r\n\r\n  return (\r\n    <div>\r\n      <h1>Clients</h1>\r\n      {loading && <p>Loading...</p>}\r\n      {error && <p>Error: {error.message}</p>}\r\n      {data && data.clients && data.clients.length > 0 ? (\r\n        <table className=\"table table-hover mt-3\">\r\n          <thead>\r\n            <tr>\r\n              <th>Name</th>\r\n              <th>Email</th>\r\n              <th>Phone</th>\r\n              <th>Action</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {data.clients.map((client) => (\r\n              <ClientRow key={client.id} client={client} />\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      ) : (\r\n        <p>No clients available.</p>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,GAAG,EAAEC,QAAQ,QAAQ,gBAAgB;AAC9C,OAAOC,SAAS,MAAM,aAAa;AACnC,SAASC,WAAW,QAAQ,yBAAyB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAErD,eAAe,SAASC,MAAMA,CAAC;EAAEC;AAAG,CAAC,EAAE;EAAAC,EAAA;EAErC,MAAM;IAAEC,OAAO;IAAEC,KAAK;IAAEC;EAAK,CAAC,GAAGV,QAAQ,CAACE,WAAW,EAAE;IACrDS,SAAS,EAAE;MAAEL;IAAG;EAClB,CAAC,CAAC;EAEF,oBACEF,OAAA;IAAAQ,QAAA,gBACER,OAAA;MAAAQ,QAAA,EAAI;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACfR,OAAO,iBAAIJ,OAAA;MAAAQ,QAAA,EAAG;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,EAC5BP,KAAK,iBAAIL,OAAA;MAAAQ,QAAA,GAAG,SAAO,EAACH,KAAK,CAACQ,OAAO;IAAA;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACtCN,IAAI,IAAIA,IAAI,CAACQ,OAAO,IAAIR,IAAI,CAACQ,OAAO,CAACC,MAAM,GAAG,CAAC,gBAC9Cf,OAAA;MAAOgB,SAAS,EAAC,wBAAwB;MAAAR,QAAA,gBACvCR,OAAA;QAAAQ,QAAA,eACER,OAAA;UAAAQ,QAAA,gBACER,OAAA;YAAAQ,QAAA,EAAI;UAAI;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACbZ,OAAA;YAAAQ,QAAA,EAAI;UAAK;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACdZ,OAAA;YAAAQ,QAAA,EAAI;UAAK;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACdZ,OAAA;YAAAQ,QAAA,EAAI;UAAM;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACb;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC,eACRZ,OAAA;QAAAQ,QAAA,EACGF,IAAI,CAACQ,OAAO,CAACG,GAAG,CAAEC,MAAM,iBACvBlB,OAAA,CAACH,SAAS;UAAiBqB,MAAM,EAAEA;QAAO,GAA1BA,MAAM,CAAChB,EAAE;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAmB,CAC7C;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,gBAERZ,OAAA;MAAAQ,QAAA,EAAG;IAAqB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAC5B;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACT,EAAA,CAhCuBF,MAAM;EAAA,QAEKL,QAAQ;AAAA;AAAAuB,EAAA,GAFnBlB,MAAM;AAAA,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}