{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\heman\\\\graphql\\\\client\\\\src\\\\components\\\\ClientRow.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { DELETE_CLIENT } from './mutations/clientMutation';\nimport { useMutation } from '@apollo/client';\nimport { GET_CLIENTS } from './queries/clientQueries';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst client = [{\n  id: \"1\",\n  name: \"user\",\n  email: \"email@gmail.com\",\n  phone: \"1111111\"\n}, {\n  id: \"2\",\n  name: \"Admin\",\n  email: \"email@gmail.com\",\n  phone: \"111111\"\n}];\nexport default function ClientRow({\n  client\n}) {\n  _s();\n  const [deleteClient] = useMutation(DELETE_CLIENT, {\n    variables: {\n      id: client.id\n    },\n    refetchQueries: [{\n      query: GET_CLIENTS\n    }],\n    update(cache, {\n      data: {\n        deleteClient\n      }\n    }) {\n      const {\n        clients\n      } = cache.readQuery({\n        query: GET_CLIENTS\n      });\n      cache.writeQuery({\n        query: GET_CLIENTS,\n        data: {\n          clients: clients.filter(client => client.id !== deleteClient.id)\n        }\n      });\n    }\n  });\n  const handleDeleteClick = () => {\n    // Call the deleteClient mutation when the button is clicked\n    deleteClient();\n  };\n  return /*#__PURE__*/_jsxDEV(\"tr\", {\n    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n      children: client.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: client.email\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: client.phone\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleDeleteClick,\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n_s(ClientRow, \"MpHlW5AzbL9dxGSrN5Hps2OiJR8=\", false, function () {\n  return [useMutation];\n});\n_c = ClientRow;\nvar _c;\n$RefreshReg$(_c, \"ClientRow\");","map":{"version":3,"names":["React","DELETE_CLIENT","useMutation","GET_CLIENTS","jsxDEV","_jsxDEV","client","id","name","email","phone","ClientRow","_s","deleteClient","variables","refetchQueries","query","update","cache","data","clients","readQuery","writeQuery","filter","handleDeleteClick","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/heman/graphql/client/src/components/ClientRow.jsx"],"sourcesContent":["import React from 'react';\r\nimport { DELETE_CLIENT } from './mutations/clientMutation';\r\nimport { useMutation } from '@apollo/client';\r\nimport { GET_CLIENTS } from './queries/clientQueries';\r\n\r\nconst client =[{\r\n  id : \"1\",\r\n  name:\"user\",\r\n  email:\"email@gmail.com\",\r\n  phone:\"1111111\"\r\n},\r\n\r\n{\r\n  id:\"2\",\r\n  name:\"Admin\",\r\n  email:\"email@gmail.com\",\r\n  phone:\"111111\"\r\n}\r\n\r\n]\r\n\r\nexport default function ClientRow({ client }) {\r\n  const [deleteClient] = useMutation(DELETE_CLIENT, {\r\n    variables: { id: client.id },\r\n    refetchQueries: [{ query: GET_CLIENTS }],\r\n    update(cache, { data: { deleteClient } }) {\r\n      const { clients } = cache.readQuery({ query: GET_CLIENTS });\r\n      cache.writeQuery({\r\n        query: GET_CLIENTS,\r\n        data: { clients: clients.filter(client => client.id !== deleteClient.id) },\r\n      });\r\n    },\r\n  });\r\n\r\n  const handleDeleteClick = () => {\r\n    // Call the deleteClient mutation when the button is clicked\r\n    deleteClient();\r\n  };\r\n\r\n  return (\r\n    <tr>\r\n      <td>{client.name}</td>\r\n      <td>{client.email}</td>\r\n      <td>{client.phone}</td>\r\n      <td>\r\n        <button onClick={handleDeleteClick}>Delete</button>\r\n      </td>\r\n    </tr>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,aAAa,QAAQ,4BAA4B;AAC1D,SAASC,WAAW,QAAQ,gBAAgB;AAC5C,SAASC,WAAW,QAAQ,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtD,MAAMC,MAAM,GAAE,CAAC;EACbC,EAAE,EAAG,GAAG;EACRC,IAAI,EAAC,MAAM;EACXC,KAAK,EAAC,iBAAiB;EACvBC,KAAK,EAAC;AACR,CAAC,EAED;EACEH,EAAE,EAAC,GAAG;EACNC,IAAI,EAAC,OAAO;EACZC,KAAK,EAAC,iBAAiB;EACvBC,KAAK,EAAC;AACR,CAAC,CAEA;AAED,eAAe,SAASC,SAASA,CAAC;EAAEL;AAAO,CAAC,EAAE;EAAAM,EAAA;EAC5C,MAAM,CAACC,YAAY,CAAC,GAAGX,WAAW,CAACD,aAAa,EAAE;IAChDa,SAAS,EAAE;MAAEP,EAAE,EAAED,MAAM,CAACC;IAAG,CAAC;IAC5BQ,cAAc,EAAE,CAAC;MAAEC,KAAK,EAAEb;IAAY,CAAC,CAAC;IACxCc,MAAMA,CAACC,KAAK,EAAE;MAAEC,IAAI,EAAE;QAAEN;MAAa;IAAE,CAAC,EAAE;MACxC,MAAM;QAAEO;MAAQ,CAAC,GAAGF,KAAK,CAACG,SAAS,CAAC;QAAEL,KAAK,EAAEb;MAAY,CAAC,CAAC;MAC3De,KAAK,CAACI,UAAU,CAAC;QACfN,KAAK,EAAEb,WAAW;QAClBgB,IAAI,EAAE;UAAEC,OAAO,EAAEA,OAAO,CAACG,MAAM,CAACjB,MAAM,IAAIA,MAAM,CAACC,EAAE,KAAKM,YAAY,CAACN,EAAE;QAAE;MAC3E,CAAC,CAAC;IACJ;EACF,CAAC,CAAC;EAEF,MAAMiB,iBAAiB,GAAGA,CAAA,KAAM;IAC9B;IACAX,YAAY,CAAC,CAAC;EAChB,CAAC;EAED,oBACER,OAAA;IAAAoB,QAAA,gBACEpB,OAAA;MAAAoB,QAAA,EAAKnB,MAAM,CAACE;IAAI;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACtBxB,OAAA;MAAAoB,QAAA,EAAKnB,MAAM,CAACG;IAAK;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACvBxB,OAAA;MAAAoB,QAAA,EAAKnB,MAAM,CAACI;IAAK;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACvBxB,OAAA;MAAAoB,QAAA,eACEpB,OAAA;QAAQyB,OAAO,EAAEN,iBAAkB;QAAAC,QAAA,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAET;AAACjB,EAAA,CA5BuBD,SAAS;EAAA,QACRT,WAAW;AAAA;AAAA6B,EAAA,GADZpB,SAAS;AAAA,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}