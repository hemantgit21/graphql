{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\heman\\\\graphql\\\\client\\\\src\\\\components\\\\Client.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useQuery } from '@apollo/client';\nimport ClientRow from './ClientRow';\nimport { GET_CLIENTS } from './queries/clientQueries';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Client({\n  id\n}) {\n  _s();\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_CLIENTS, {\n    variables: {\n      id\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }, this) : error ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Error: \", error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table table-hover mt-3\",\n      children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: data.clients.map(client => /*#__PURE__*/_jsxDEV(ClientRow, {\n          client: client\n        }, client.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n_s(Client, \"OQZiY3KqWoytFPIJWw/H9Hrmbok=\", false, function () {\n  return [useQuery];\n});\n_c = Client;\nvar _c;\n$RefreshReg$(_c, \"Client\");","map":{"version":3,"names":["React","useQuery","ClientRow","GET_CLIENTS","jsxDEV","_jsxDEV","Fragment","_Fragment","Client","id","_s","loading","error","data","variables","children","fileName","_jsxFileName","lineNumber","columnNumber","message","className","clients","map","client","_c","$RefreshReg$"],"sources":["C:/Users/heman/graphql/client/src/components/Client.jsx"],"sourcesContent":["import React from 'react'\r\nimport { useQuery } from '@apollo/client'\r\nimport ClientRow from './ClientRow'\r\nimport { GET_CLIENTS } from './queries/clientQueries'\r\n\r\nexport default function Client({ id }) {\r\n\r\n  const { loading, error, data } = useQuery(GET_CLIENTS, {\r\n    variables: { id },\r\n  })\r\n\r\n  return (\r\n    <>\r\n      {loading ? (\r\n        <p>Loading...</p>\r\n      ) : error ? (\r\n        <p>Error: {error.message}</p>\r\n      ) : (\r\n        <table className=\"table table-hover mt-3\">\r\n          <tbody>\r\n            {data.clients.map((client) => (\r\n              <ClientRow key={client.id} client={client} />\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,gBAAgB;AACzC,OAAOC,SAAS,MAAM,aAAa;AACnC,SAASC,WAAW,QAAQ,yBAAyB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAErD,eAAe,SAASC,MAAMA,CAAC;EAAEC;AAAG,CAAC,EAAE;EAAAC,EAAA;EAErC,MAAM;IAAEC,OAAO;IAAEC,KAAK;IAAEC;EAAK,CAAC,GAAGZ,QAAQ,CAACE,WAAW,EAAE;IACrDW,SAAS,EAAE;MAAEL;IAAG;EAClB,CAAC,CAAC;EAEF,oBACEJ,OAAA,CAAAE,SAAA;IAAAQ,QAAA,EACGJ,OAAO,gBACNN,OAAA;MAAAU,QAAA,EAAG;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,GACfP,KAAK,gBACPP,OAAA;MAAAU,QAAA,GAAG,SAAO,EAACH,KAAK,CAACQ,OAAO;IAAA;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,gBAE7Bd,OAAA;MAAOgB,SAAS,EAAC,wBAAwB;MAAAN,QAAA,eACvCV,OAAA;QAAAU,QAAA,EACGF,IAAI,CAACS,OAAO,CAACC,GAAG,CAAEC,MAAM,iBACvBnB,OAAA,CAACH,SAAS;UAAiBsB,MAAM,EAAEA;QAAO,GAA1BA,MAAM,CAACf,EAAE;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAmB,CAC7C;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EACR,gBACD,CAAC;AAEP;AAACT,EAAA,CAvBuBF,MAAM;EAAA,QAEKP,QAAQ;AAAA;AAAAwB,EAAA,GAFnBjB,MAAM;AAAA,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}