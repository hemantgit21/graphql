{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\heman\\\\graphql\\\\client\\\\src\\\\App.js\";\nimport logo from './logo.svg';\nimport './App.css';\nimport { ApolloProvider, ApolloClient, InMemoryCache } from '@apollo/client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst cache = new InMemoryCache({\n  typePolicies: {\n    Query: {\n      fields: {\n        clients: {\n          merge(existing, incoming) {\n            return incoming;\n          }\n        },\n        projects: {\n          merge(existing, incoming) {\n            return incoming;\n          }\n        }\n      }\n    }\n  }\n});\nconst client = new ApolloClient({\n  url: \"http://localhost:3000/graphql\",\n  cache\n});\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(ApolloProvider, {\n      client: client,\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"PROJECT MANAGEMENT \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logo","ApolloProvider","ApolloClient","InMemoryCache","jsxDEV","_jsxDEV","Fragment","_Fragment","cache","typePolicies","Query","fields","clients","merge","existing","incoming","projects","client","url","App","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/heman/graphql/client/src/App.js"],"sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport {ApolloProvider,ApolloClient,InMemoryCache} from '@apollo/client';\n\n\nconst cache = new InMemoryCache({\n  typePolicies:{\n    Query:{\n      fields:{\n        clients:{\n          merge(existing,incoming) {\n            return incoming;\n          },\n        },\n        projects:{\n          merge(existing,incoming) {\n            return incoming;\n          }\n        }\n      }\n    }\n  }\n})\n\nconst client = new ApolloClient({\n  url:\"http://localhost:3000/graphql\",\n  cache,\n})\n\nfunction App() {\n  return (\n    <>\n    <ApolloProvider client={client} >\n      <h1>PROJECT MANAGEMENT </h1>\n      </ApolloProvider>\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":";AAAA,OAAOA,IAAI,MAAM,YAAY;AAC7B,OAAO,WAAW;AAClB,SAAQC,cAAc,EAACC,YAAY,EAACC,aAAa,QAAO,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAGzE,MAAMC,KAAK,GAAG,IAAIL,aAAa,CAAC;EAC9BM,YAAY,EAAC;IACXC,KAAK,EAAC;MACJC,MAAM,EAAC;QACLC,OAAO,EAAC;UACNC,KAAKA,CAACC,QAAQ,EAACC,QAAQ,EAAE;YACvB,OAAOA,QAAQ;UACjB;QACF,CAAC;QACDC,QAAQ,EAAC;UACPH,KAAKA,CAACC,QAAQ,EAACC,QAAQ,EAAE;YACvB,OAAOA,QAAQ;UACjB;QACF;MACF;IACF;EACF;AACF,CAAC,CAAC;AAEF,MAAME,MAAM,GAAG,IAAIf,YAAY,CAAC;EAC9BgB,GAAG,EAAC,+BAA+B;EACnCV;AACF,CAAC,CAAC;AAEF,SAASW,GAAGA,CAAA,EAAG;EACb,oBACEd,OAAA,CAAAE,SAAA;IAAAa,QAAA,eACAf,OAAA,CAACJ,cAAc;MAACgB,MAAM,EAAEA,MAAO;MAAAG,QAAA,eAC7Bf,OAAA;QAAAe,QAAA,EAAI;MAAmB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACZ;EAAC,gBACjB,CAAC;AAEP;AAACC,EAAA,GARQN,GAAG;AAUZ,eAAeA,GAAG;AAAC,IAAAM,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}