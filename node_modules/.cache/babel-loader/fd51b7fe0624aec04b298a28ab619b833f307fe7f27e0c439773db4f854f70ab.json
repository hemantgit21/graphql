{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\heman\\\\graphql\\\\client\\\\src\\\\components\\\\Client.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useQuery } from '@apollo/client';\nimport ClientRow from './ClientRow';\nimport { GET_CLIENTS } from './queries/clientQueries';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Client({\n  id\n}) {\n  _s();\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_CLIENTS, {\n    variables: {\n      id\n    }\n  });\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Error: \", error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 12\n    }, this);\n  }\n  const clients = (data === null || data === void 0 ? void 0 : data.clients) || [];\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    className: \"table table-hover mt-3\",\n    children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: \"Hemant\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: \"email@gmail.com\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"phone\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: \"99999999\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 10\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n_s(Client, \"OQZiY3KqWoytFPIJWw/H9Hrmbok=\", false, function () {\n  return [useQuery];\n});\n_c = Client;\nvar _c;\n$RefreshReg$(_c, \"Client\");","map":{"version":3,"names":["React","useQuery","ClientRow","GET_CLIENTS","jsxDEV","_jsxDEV","Client","id","_s","loading","error","data","variables","children","fileName","_jsxFileName","lineNumber","columnNumber","message","clients","className","_c","$RefreshReg$"],"sources":["C:/Users/heman/graphql/client/src/components/Client.jsx"],"sourcesContent":["import React from 'react';\r\nimport { useQuery } from '@apollo/client';\r\nimport ClientRow from './ClientRow';\r\nimport { GET_CLIENTS } from './queries/clientQueries';\r\n\r\nexport default function Client({ id }) {\r\n  const { loading, error, data } = useQuery(GET_CLIENTS, {\r\n    variables: { id },\r\n  });\r\n\r\n  if (loading) {\r\n    return <p>Loading...</p>;\r\n  }\r\n\r\n  if (error) {\r\n    return <p>Error: {error.message}</p>;\r\n  }\r\n\r\n  const clients = data?.clients || [];\r\n\r\n  return (\r\n    <table className=\"table table-hover mt-3\">\r\n      <tbody>\r\n        {/* {clients.map((client) => (\r\n          <ClientRow key={client.id} client={client} />\r\n        ))}\r\n         */}\r\n\r\n         <tr>\r\n          <th>Name</th>\r\n          <td>Hemant</td>\r\n          <th>Email</th>\r\n          <td>email@gmail.com</td>\r\n          <th>phone</th>\r\n          <td>99999999</td>\r\n         </tr>\r\n      </tbody>\r\n    </table>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,gBAAgB;AACzC,OAAOC,SAAS,MAAM,aAAa;AACnC,SAASC,WAAW,QAAQ,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtD,eAAe,SAASC,MAAMA,CAAC;EAAEC;AAAG,CAAC,EAAE;EAAAC,EAAA;EACrC,MAAM;IAAEC,OAAO;IAAEC,KAAK;IAAEC;EAAK,CAAC,GAAGV,QAAQ,CAACE,WAAW,EAAE;IACrDS,SAAS,EAAE;MAAEL;IAAG;EAClB,CAAC,CAAC;EAEF,IAAIE,OAAO,EAAE;IACX,oBAAOJ,OAAA;MAAAQ,QAAA,EAAG;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAC1B;EAEA,IAAIP,KAAK,EAAE;IACT,oBAAOL,OAAA;MAAAQ,QAAA,GAAG,SAAO,EAACH,KAAK,CAACQ,OAAO;IAAA;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EACtC;EAEA,MAAME,OAAO,GAAG,CAAAR,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEQ,OAAO,KAAI,EAAE;EAEnC,oBACEd,OAAA;IAAOe,SAAS,EAAC,wBAAwB;IAAAP,QAAA,eACvCR,OAAA;MAAAQ,QAAA,eAMGR,OAAA;QAAAQ,QAAA,gBACCR,OAAA;UAAAQ,QAAA,EAAI;QAAI;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACbZ,OAAA;UAAAQ,QAAA,EAAI;QAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACfZ,OAAA;UAAAQ,QAAA,EAAI;QAAK;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACdZ,OAAA;UAAAQ,QAAA,EAAI;QAAe;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACxBZ,OAAA;UAAAQ,QAAA,EAAI;QAAK;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACdZ,OAAA;UAAAQ,QAAA,EAAI;QAAQ;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACd;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEZ;AAACT,EAAA,CAlCuBF,MAAM;EAAA,QACKL,QAAQ;AAAA;AAAAoB,EAAA,GADnBf,MAAM;AAAA,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}